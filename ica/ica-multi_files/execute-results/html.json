{
  "hash": "0d3173fe65103c8927b05e9e5c3ccafd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mulivariate Viz\"\nnumber-sections: false\n---\n\n\n\n\nUse this file for practice with the **mulivariate viz** in-class activity.  Refer to the class website for details.\n\n# Review\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n# Import data\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |> \n  mutate(date = as.Date(date))  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check out the first 6 rows\nhead(weather)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        date   location mintemp maxtemp rainfall evaporation sunshine\n1 2020-01-01 Wollongong    17.1    23.1        0          NA       NA\n2 2020-01-02 Wollongong    17.7    24.2        0          NA       NA\n3 2020-01-03 Wollongong    19.7    26.8        0          NA       NA\n4 2020-01-04 Wollongong    20.4    35.5        0          NA       NA\n5 2020-01-05 Wollongong    19.8    21.4        0          NA       NA\n6 2020-01-06 Wollongong    18.3    22.9        0          NA       NA\n  windgustdir windgustspeed winddir9am winddir3pm windspeed9am windspeed3pm\n1         SSW            39        SSW        SSE           20           15\n2         SSW            37          S        ENE           13           15\n3          NE            41        NNW        NNE            7           17\n4         SSW            78         NE        NNE           15           17\n5         SSW            57        SSW          S           31           35\n6          NE            35        ESE         NE           17           20\n  humidity9am humidity3pm pressure9am pressure3pm cloud9am cloud3pm temp9am\n1          69          64      1014.9      1014.0        8        1    19.1\n2          72          54      1020.1      1017.7        7        1    19.8\n3          72          71      1017.5      1013.0        6       NA    23.4\n4          77          69      1008.8      1003.9       NA       NA    24.5\n5          70          75      1018.9      1019.9       NA        7    20.7\n6          71          71      1021.2      1018.2       NA       NA    20.9\n  temp3pm raintoday risk_mm raintomorrow\n1    22.9        No     0.0           No\n2    23.6        No     0.0           No\n3    25.7        No     0.0           No\n4    26.7        No     0.0           No\n5    20.0        No     0.0           No\n6    22.6        No     0.8           No\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What are the units of observation?\nnames(weather)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"date\"          \"location\"      \"mintemp\"       \"maxtemp\"      \n [5] \"rainfall\"      \"evaporation\"   \"sunshine\"      \"windgustdir\"  \n [9] \"windgustspeed\" \"winddir9am\"    \"winddir3pm\"    \"windspeed9am\" \n[13] \"windspeed3pm\"  \"humidity9am\"   \"humidity3pm\"   \"pressure9am\"  \n[17] \"pressure3pm\"   \"cloud9am\"      \"cloud3pm\"      \"temp9am\"      \n[21] \"temp3pm\"       \"raintoday\"     \"risk_mm\"       \"raintomorrow\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# How many data points do we have? \nnrow(weather)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2367\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What type of variables do we have?\nstr(weather)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t2367 obs. of  24 variables:\n $ date         : Date, format: \"2020-01-01\" \"2020-01-02\" ...\n $ location     : chr  \"Wollongong\" \"Wollongong\" \"Wollongong\" \"Wollongong\" ...\n $ mintemp      : num  17.1 17.7 19.7 20.4 19.8 18.3 19.9 20.1 19.8 20.5 ...\n $ maxtemp      : num  23.1 24.2 26.8 35.5 21.4 22.9 25.6 23.2 23.1 25.4 ...\n $ rainfall     : num  0 0 0 0 0 0 0.8 1.6 0 0 ...\n $ evaporation  : num  NA NA NA NA NA NA NA NA NA NA ...\n $ sunshine     : num  NA NA NA NA NA NA NA NA NA NA ...\n $ windgustdir  : chr  \"SSW\" \"SSW\" \"NE\" \"SSW\" ...\n $ windgustspeed: int  39 37 41 78 57 35 44 41 39 56 ...\n $ winddir9am   : chr  \"SSW\" \"S\" \"NNW\" \"NE\" ...\n $ winddir3pm   : chr  \"SSE\" \"ENE\" \"NNE\" \"NNE\" ...\n $ windspeed9am : int  20 13 7 15 31 17 30 31 24 19 ...\n $ windspeed3pm : int  15 15 17 17 35 20 7 33 26 39 ...\n $ humidity9am  : int  69 72 72 77 70 71 76 77 76 79 ...\n $ humidity3pm  : int  64 54 71 69 75 71 72 76 79 76 ...\n $ pressure9am  : num  1015 1020 1018 1009 1019 ...\n $ pressure3pm  : num  1014 1018 1013 1004 1020 ...\n $ cloud9am     : int  8 7 6 NA NA NA NA 8 NA NA ...\n $ cloud3pm     : int  1 1 NA NA 7 NA NA NA NA NA ...\n $ temp9am      : num  19.1 19.8 23.4 24.5 20.7 20.9 22.9 21.3 21.2 23 ...\n $ temp3pm      : num  22.9 23.6 25.7 26.7 20 22.6 24.9 22.2 22.2 25.1 ...\n $ raintoday    : chr  \"No\" \"No\" \"No\" \"No\" ...\n $ risk_mm      : num  0 0 0 0 0 0.8 1.6 0 0 1 ...\n $ raintomorrow : chr  \"No\" \"No\" \"No\" \"No\" ...\n```\n\n\n:::\n:::\n\n\n\n# Example 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weather, aes(x = temp3pm)) +\n  geom_density()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# Example 2\nConstruct 3 plots that answer the following question:\n- How do afternoon temperatures (`temp3pm`) differ by `location`?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm, color = location)) + \n  geom_density(alpha = 0.6)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) +\n  geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot 3 (facets)\nggplot(weather, aes(x = temp3pm)) +\n  geom_density() +\n  facet_wrap(~ location)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nReflection:\n\n- Temperatures tend to be highest, and most variable, in Uluru. There, they range from ~10 to ~45 with a typical temp around ~30 degrees.\n- Temperatures tend to be lowest in Hobart. There, they range from ~5 to ~45 with a typical temp around ~15 degrees.\n- Wollongong temps are in between and are the least variable from day to day.\n\nNote: defining `Fill` and `Color`\n\n- If defined by a **named color**, they are defined outside of `aes()` in quotes\n  - Ex.: `geom__(fill = \"blue\")`\n- If defined by a **variable**, they are defined in `aes()`\n  - Ex.: `geom__(aes(fill = variable))` or `ggplot (_, aes(fill = variable))`\n  \n# Example 3:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Don't worry about the syntax (we'll learn it soon)\nwoll <- weather |>\n  filter(location == \"Wollongong\") |> \n  mutate(date = as.Date(date))  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday)) +\n  geom_bar(fill = \"blue\")\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday))\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggplot(woll, aes(x = raintoday, fill = raintomorrow)) +\n#  geom_bar(position = \"fill\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nReflection:\n\n- There’s often not one “best plot”, but a combination of plots that provide a complete picture:\n  - The stacked and side-by-side bars reflect that on most days, it does not rain.\n  - The proportional / filled bars lose that information, but make it easier to compare proportions: it’s more likely to rain tomorrow if it also rains today.\n\n# Example 4:\nConstruct a plot that illustrates how 3pm temperatures (`temp3pm`) vary by date in Wollongong. Represent each day on the plot and use a curve/line to help highlight the trends.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\nggplot(woll, aes(y = temp3pm, x = date)) +\n  geom_point() +\n  geom_smooth(span = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 18 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n# Example 5: Considering all three locations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() +\n  facet_wrap(~ raintoday)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n# Example 6\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date)) + \n  geom_line() + \n  facet_wrap(~ location)\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n# Example 7\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") + \n  facet_wrap(~ location)\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n# Exercise 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import and check out data\neducation <- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n```\n\n\n:::\n:::\n\n\n\nPart a:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(education, aes(x = sat)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\nPart b:\n\n- The range of the average scores go from <800 to >1100. \n- The shape appears to peak at just over 900, with a smaller peak at about 1050.\n\n# Exercise 2\nCan the variability in `sat` scores from state to state be partially explained by how much a state spends on education, specifically its per pupil spending (`expend`) and typical teacher `salary`?\n\nPart a:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(x = expend, y = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(x = salary, y = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\nPart b:\n\n- There is a weak negative relationship between both `expend` vs `sat` and `salary` vs `sat`.\n- It is surprising that the relationship is negative; it seems that the less is spent, the higher the average score seems to be.\n\n# Exercise 3:\nConstruct one visualization of the relationship of `sat` with `salary` and `expend`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(education, aes(x = salary, y = sat, color = expend)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n# Exercise 4\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n- It seems that lower `salary` and `expend` leads to higher `sat` scores.\n\n# Exercise 5\nPart a:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Univariate viz of fracCat\nggplot(education, aes(x = fracCat)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\nPart b:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bivariate viz of sat and fracCat\nggplot(education, aes(x = fracCat, y = sat)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](ica-multi_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n- The more people take the SAT in a state, the lower the average score. This might be because if the general trend is to not take the SAT, those who do tend to have higher goals and standards.\n\nPart c:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Trivariate visualization of sat relating to expend AND fracCat. \n# Highlight the differences in fracCat groups through color AND unique trend lines.\n```\n:::\n",
    "supporting": [
      "ica-multi_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}